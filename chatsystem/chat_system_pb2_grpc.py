# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import chat_system_pb2 as chat__system__pb2


class ChatServerStub(object):
    """import "google/protobuf/empty.proto";

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUser = channel.unary_unary(
                '/chatsystem.ChatServer/GetUser',
                request_serializer=chat__system__pb2.User.SerializeToString,
                response_deserializer=chat__system__pb2.Status.FromString,
                )
        self.LogoutUser = channel.unary_unary(
                '/chatsystem.ChatServer/LogoutUser',
                request_serializer=chat__system__pb2.User.SerializeToString,
                response_deserializer=chat__system__pb2.Status.FromString,
                )
        self.GetGroup = channel.unary_unary(
                '/chatsystem.ChatServer/GetGroup',
                request_serializer=chat__system__pb2.Group.SerializeToString,
                response_deserializer=chat__system__pb2.GroupDetails.FromString,
                )
        self.ExitGroup = channel.unary_unary(
                '/chatsystem.ChatServer/ExitGroup',
                request_serializer=chat__system__pb2.Group.SerializeToString,
                response_deserializer=chat__system__pb2.Status.FromString,
                )
        self.GetMessages = channel.unary_stream(
                '/chatsystem.ChatServer/GetMessages',
                request_serializer=chat__system__pb2.Group.SerializeToString,
                response_deserializer=chat__system__pb2.Message.FromString,
                )
        self.PostMessage = channel.unary_unary(
                '/chatsystem.ChatServer/PostMessage',
                request_serializer=chat__system__pb2.Message.SerializeToString,
                response_deserializer=chat__system__pb2.Status.FromString,
                )
        self.Ping = channel.unary_unary(
                '/chatsystem.ChatServer/Ping',
                request_serializer=chat__system__pb2.BlankMessage.SerializeToString,
                response_deserializer=chat__system__pb2.Status.FromString,
                )
        self.HealthCheck = channel.stream_unary(
                '/chatsystem.ChatServer/HealthCheck',
                request_serializer=chat__system__pb2.ActiveSession.SerializeToString,
                response_deserializer=chat__system__pb2.Status.FromString,
                )
        self.SendMessagetoServer = channel.unary_stream(
                '/chatsystem.ChatServer/SendMessagetoServer',
                request_serializer=chat__system__pb2.Group.SerializeToString,
                response_deserializer=chat__system__pb2.Message.FromString,
                )


class ChatServerServicer(object):
    """import "google/protobuf/empty.proto";

    """

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogoutUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExitGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessagetoServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=chat__system__pb2.User.FromString,
                    response_serializer=chat__system__pb2.Status.SerializeToString,
            ),
            'LogoutUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LogoutUser,
                    request_deserializer=chat__system__pb2.User.FromString,
                    response_serializer=chat__system__pb2.Status.SerializeToString,
            ),
            'GetGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGroup,
                    request_deserializer=chat__system__pb2.Group.FromString,
                    response_serializer=chat__system__pb2.GroupDetails.SerializeToString,
            ),
            'ExitGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.ExitGroup,
                    request_deserializer=chat__system__pb2.Group.FromString,
                    response_serializer=chat__system__pb2.Status.SerializeToString,
            ),
            'GetMessages': grpc.unary_stream_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=chat__system__pb2.Group.FromString,
                    response_serializer=chat__system__pb2.Message.SerializeToString,
            ),
            'PostMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PostMessage,
                    request_deserializer=chat__system__pb2.Message.FromString,
                    response_serializer=chat__system__pb2.Status.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=chat__system__pb2.BlankMessage.FromString,
                    response_serializer=chat__system__pb2.Status.SerializeToString,
            ),
            'HealthCheck': grpc.stream_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=chat__system__pb2.ActiveSession.FromString,
                    response_serializer=chat__system__pb2.Status.SerializeToString,
            ),
            'SendMessagetoServer': grpc.unary_stream_rpc_method_handler(
                    servicer.SendMessagetoServer,
                    request_deserializer=chat__system__pb2.Group.FromString,
                    response_serializer=chat__system__pb2.Message.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chatsystem.ChatServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatServer(object):
    """import "google/protobuf/empty.proto";

    """

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatsystem.ChatServer/GetUser',
            chat__system__pb2.User.SerializeToString,
            chat__system__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LogoutUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatsystem.ChatServer/LogoutUser',
            chat__system__pb2.User.SerializeToString,
            chat__system__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatsystem.ChatServer/GetGroup',
            chat__system__pb2.Group.SerializeToString,
            chat__system__pb2.GroupDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExitGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatsystem.ChatServer/ExitGroup',
            chat__system__pb2.Group.SerializeToString,
            chat__system__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chatsystem.ChatServer/GetMessages',
            chat__system__pb2.Group.SerializeToString,
            chat__system__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatsystem.ChatServer/PostMessage',
            chat__system__pb2.Message.SerializeToString,
            chat__system__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chatsystem.ChatServer/Ping',
            chat__system__pb2.BlankMessage.SerializeToString,
            chat__system__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthCheck(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/chatsystem.ChatServer/HealthCheck',
            chat__system__pb2.ActiveSession.SerializeToString,
            chat__system__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessagetoServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chatsystem.ChatServer/SendMessagetoServer',
            chat__system__pb2.Group.SerializeToString,
            chat__system__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
